---
name: Pull request pre-check build & test

on:
  pull_request:
  push:
    branches: [main]

jobs:
  pre-commit:
    name: Run the pre-commit hook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pre-commit/action@v3.0.0

  build-container:
    name: Build and push the ipa-tuura container
    runs-on: ubuntu-latest
    if: github.repository_owner == 'amore17'
    needs: [pre-commit]
    env:
      IMAGE_REGISTRY_GITHUB: ghcr.io
      IMAGE_REGISTRY_QUAY: quay.io/idmops/ipa-tuura
      IMAGE_TAG: ${{ github.event.number || github.ref_name  }}  # use PR number else ref_name -> branch name

    steps:
      - name: Set the ghcr.io image name derived from repository name
        run: |
          echo "IMAGE_REGISTRY_GITHUB=${IMAGE_REGISTRY_GITHUB}/${IMAGE,,}" >> ${GITHUB_ENV}
        env:
          IMAGE: '${{ github.repository }}'

      - name: Log in to the GitHub Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.IMAGE_REGISTRY_GITHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Quay.io
        if: github.event_name != 'pull_request'
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.IMAGE_REGISTRY_QUAY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - uses: actions/checkout@v3

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
# yamllint disable rule:line-length
        with:
          tags: |
              ${{ format('{0}:{1}', env.IMAGE_REGISTRY_GITHUB, env.IMAGE_TAG) }}
              ${{ ( github.ref == 'refs/heads/main' && format('{0}:latest', env.IMAGE_REGISTRY_GITHUB) ) || '' }}
              ${{ ( github.ref_type == 'tag' && format('{0}:{1}', env.IMAGE_REGISTRY_GITHUB, github.ref_name) ) || '' }}
              ${{ ( github.event_name != 'pull_request' && format('{0}:{1}', env.IMAGE_REGISTRY_QUAY, env.IMAGE_TAG) ) || '' }}
              ${{ ( github.event_name != 'pull_request' && github.ref == 'refs/heads/main' && format('{0}:latest', env.IMAGE_REGISTRY_QUAY) ) || '' }}
              ${{ ( github.event_name != 'pull_request' && github.ref_type == 'tag' && format('{0}:{1}', env.IMAGE_REGISTRY_QUAY, github.ref_name) ) || '' }}
          containerfiles: |
            ./Dockerfile.test
# yamllint enable rule:line-length
      - name: Push to Repositories if PR is not from fork
        id: push-to-repo
        uses: redhat-actions/push-to-registry@v2
        if: |
          github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}

      - name: Print image url if PR is not from fork
        if: |
          github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name
        run: echo "Image pushed to ${{ steps.push-to-repo.outputs.registry-paths }}"

  pull-container:
    name: Pull the ipa-tuura container if PR is not from fork
    runs-on: ubuntu-latest
    if: |
      github.repository_owner == 'amore17' &&
      github.event.pull_request.head.repo.full_name == github.event.pull_request.base.repo.full_name
    needs: [build-container]
    env:
      IMAGE_REGISTRY_GITHUB: ghcr.io
      IMAGE_REGISTRY_QUAY: quay.io/idmops/ipa-tuura
      IMAGE_TAG: ${{ github.event.number || github.ref_name  }}  # use PR number else ref_name -> branch name

    steps:
      - name: Install podman-compose
        run: sudo pip3 install podman-compose

      - name: Set the ghcr.io image name derived from repository name (PR from repo)
        run: |
          echo "IMAGE_REGISTRY_GITHUB=${IMAGE_REGISTRY_GITHUB}/${IMAGE,,}" >> ${GITHUB_ENV}
        env:
          IMAGE: '${{ github.repository }}'

      - name: Log in to the GitHub Container registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.IMAGE_REGISTRY_GITHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Quay.io
        if: github.event_name != 'pull_request'
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.IMAGE_REGISTRY_QUAY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Pull the image previously built from GitHub Container registry
        run: |
          podman pull ${{ env.IMAGE_REGISTRY_GITHUB }}:${{ env.IMAGE_TAG }}
          podman images

      - name: Pull the image previously built from Quay.io
        if: github.event_name != 'pull_request'
        run: |
          podman pull ${{ env.IMAGE_REGISTRY_QUAY }}:${{ env.IMAGE_TAG }}
          podman images
          echo "IMAGE_REGISTRY_GH=${{ env.IMAGE_REGISTRY_QUAY }}:${{ env.IMAGE_TAG }}" >> .env

      - uses: actions/checkout@v3

      - name: Set image name in .env file
        run: |
          echo "IMAGE_REGISTRY_GH=${{ env.IMAGE_REGISTRY_GITHUB }}:${{ env.IMAGE_TAG }}" >> .env
          cat .env

      - name: Start containers
        run: sudo podman-compose -f ./docker-compose.yml up -d

      - name: Sudo state of container services
        run: sudo podman ps -a

      - name: state of container services
        run: podman ps -a

      - name: Test containers
        run: |
          sudo podman images
          sudo podman ps -a
          sudo sleep 120
          sudo podman exec ipa /usr/bin/bash -c 'ipactl restart'
          sudo podman exec ipa /usr/bin/bash -c 'ipactl status'
          sudo podman exec ipa /usr/bin/bash -c 'echo Secret123 | kinit admin && echo vagrant'
          sudo podman exec ipa /usr/bin/bash -c 'klist'

      - name: Stop containers
        if: always()
        run: podman-compose -f "./docker-compose.yml" down
